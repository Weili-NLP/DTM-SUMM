Cross - Domain Co - Extraction of Sentiment and Topic Lexicons Extracting sentiment and topic lexicons is important for opinion mining .
Previous works have showed that supervised learning methods are superior for this task .
However , the performance of supervised methods highly relies on manually labeled training data .
In this paper , we propose a domain adaptation framework for sentiment - and topic - lexicon co - extraction in a domain of interest where we do not require any labeled data , but have lots of labeled data in another related domain .
The framework is twofold .
In the first step , we generate a few high - confidence sentiment and topic seeds in the target domain .
In the second step , we propose a novel Relational Adaptive bootstraPping ( RAP ) algorithm to expand the seeds in the target domain by exploiting the labeled source domain data and the relationships between topic and sentiment words .
Experimental results show that our domain adaptation framework can extract precise lexicons in the target domain without any annotation .
1 Introduction In the past few years , opinion mining and sentiment analysis have attracted much attention in Natural Language Processing ( NLP ) and Information Retrieval ( IR ) ( Pang and Lee , 2008 ; Liu , 2010 ).
Sentiment lexicon construction and topic lexicon extraction are two fundamental subtasks for opinion mining ( Qiu et al ., 2009 ).
A sentiment lexicon is a list of sentiment expressions , which are used to indicate sentiment polarity ( e . g ., positive or negative ).
The sentiment lexicon is domain dependent as users may use different sentiment words to express their opinion in different domains ( e . g ., different products ).
A topic lexicon is a list of topic expressions , on which the sentiment words are expressed .
Extracting the topic lexicon from a specific domain is important because users not only care about the overall sentiment polarity of a review but also care about which aspects are mentioned in review .
Note that , similar to sentiment lexicons , different domains may have very different topic lexicons .
Recently , Jin and Ho ( 2009 ) and Li et al .
( 2010a ) showed that supervised learning methods can achieve state - of - the - art results for lexicon extraction .
However , the performance of these methods highly relies on manually annotated training data .
In most cases , the labeling work may be time - consuming and expensive .
It is impossible to annotate each domain of interest to build precise domain - dependent lexicons .
It is more desirable to automatically construct precise lexicons in domains of interest by transferring knowledge from other domains .
In this paper , we focus on the co - extraction task of sentiment and topic lexicons in a target domain where we do not have any labeled data , but have plenty of labeled data in a source domain .
Our goal is to leverage the knowledge extracted from the source domain to help lexicon co - extraction in the target domain .
To address this problem , we propose a two - stage domain adaptation method .
In the first step , we build a bridge between the source and target domains by identifying some common sentiment words as sentiment seeds in the target domain , such as " good ", " bad ", " nice ", etc .
After that , we generate topic seeds in the target domain by mining some general syntactic relation patterns between the sentiment and topic words from the source domain .
In the second step , we propose a Relational Adaptive bootstraPping ( RAP ) algorithm to expand the seeds in the target domain .
Our proposed method can utilize useful labeled data from the source domain as well as exploit the relationships between the topic and sentiment words to propagate information for lexicon construction in the target domain .
Experimental results show that our proposed method is effective for cross - domain lexicon co - extraction .
In summary , we have three main contributions : 1 ) We give a systematic study on cross - domain sentiment analysis in word level .
While , most of previous work focused on document level ; 2 ) A new two - step domain adaptation framework , with a novel RAP algorithm for seed expansion , is proposed .
3 ) We conduct extensive evaluation , and the experimental results demonstrate the effectiveness of our methods .
2 Related Work 2 . 1 Sentiment or Topic Lexicon Extraction Sentiment or topic lexicon extraction is to identify the sentiment or topic words from text .
In the past , many machine learning techniques have been proposed for this task .
Hu and Liu et al .
( 2004 ) proposed an association - rule - based method to extract topic words and a dictionary - based method to identify sentiment words , independently .
Wiebe et identify subjective adjectives and nouns using word clustering based on their distributional similarity .
Popescu and Etzioni ( 2005 ) proposed a relaxed labeling approach to utilize linguistic rules for opinion polarity detection .
Some researchers also proposed to use topic modeling to identify implicit topics and sentiment words ( Mei et al ., 2007 ; Titov and McDonald , 2008 ; Zhao et al ., 2010 ; Li et al ., 2010b ), where a topic is a cluster of words , which is different from our fine - grained topic - word extraction .
Jin and Ho ( 2009 ) and Li et al .
( 2010a ) both proposed to use supervised sequential labeling methods for topic and opinion extraction .
Experimental results showed that the supervised learning methods can achieve state - of - the - art performance on lexicon extraction .
However , these methods need to manually annotate a lot of training data in each domain .
Recently , Qiu et al .
( 2009 ) proposed a rule - based semi - supervised learning methods for lexicon extraction .
However , their method requires to manually define some general syntactic rules among sentiment and topic words .
In addition , it still requires some annotated words in the target domain .
In this paper , we do not assume any predefined rules and labeled data be available in the target domain .
2 . 2 Domain Adaptation Domain adaptation aims at transferring knowledge across domains where data distributions may be different ( Pan and Yang , 2010 ).
In the past few years , domain adaptation techniques have been widely applied to various NLP tasks , such as part - of - speech tagging ( Ando and Zhang , 2005 ; Jiang and Zhai , 2007 ; Daume III , 2007 ), named - entity recognition and shallow parsing ( Daume III , 2007 ; Jiang and Zhai , 2007 ; Wu et al ., 2009 ).
There are also lots of studies for cross - domain sentiment analysis ( Blitzer et al ., 2007 ; Tan et al ., 2007 ; Li et al ., 2009 ; Pan et al ., 2010 ; Bollegala et al ., 2011 ; He et al ., 2011 ; Glorot et al ., 2011 ).
However , most of them focused on coarse - grained document - level sentiment classification , which is different from our fine - grained word - level extraction .
Our work is similar to Jakob and Gurevych ( 2010 ) which proposed a Conditional Random Field ( CRF ) for cross - domain topic word extraction .
However , the performance of their method highly depends on the manually designed features .
In our experiments , we compare our method with theirs , and find that ours can achieve much better results on cross - domain lexicon extraction .
Note that our work is also different from a recent work ( Du et al ., 2010 ), which focused on identifying the polarity of adjective words by using cross - domain knowledge .
While we extract both topic and sentiment words and allow non - adjective sentiment words , which is more practical .
3 Cross - Domain Lexicon Co - Extraction 3 . 1 Problem Definition Recall that , we focus on the setting where we have no labeled data in the target domain , while we have plenty of labeled data in the source domain .
Denote T > s = {( wSi , ySii the source domain data , where wSi represents a word in the source domain .
ySi G Y is the corresponding label of wSi .
Similarly , we denote DT = { wTj } rj = L 1 the target domain data , where the input wTj is a word in the target domain .
In lexicon extraction , Y G { 1 , 2 , 3 }, where yi = 1 denotes the corresponding word wi a sentiment word , yi = 2 denotes wi a topic word , and yi = 3 denotes Wi neither a sentiment nor topic word .
Our goal is to predict labels on DT to extract topic and sentiment words for constructing topic and sentiment lexicons , respectively .
3 . 2 Motivating Examples In this section , we use some examples to introduce the motivation behind our proposed method .
Table 1 shows several reviews from two domains : movie and camera .
From the table , we can observe that there are some common sentiment words across different domains , such as " great ", " excellent " and " amazing ".
However , the topic words may be different .
For example , in the movie domain , topic words include " movie " and " script ".
While in the camera domain , topic words include " camera " and " photos ".
Table 1 : Reviews in camera and movie domains .
Boldfaces are topic words and Italics are sentiment words .
Based on the observations , we can build a connection between the source and target domains by identifying the common sentiment words .
Furthermore , intuitively , there are some general syntactic relationships or patterns between topic and sentiment words across different domains .
Therefore , if we can mine the patterns from the source and target domain data , then we are able to construct an indirect connection between topic words across domains by using the common sentiment words as a bridge , which makes knowledge transfer across domains possible .
Figure 1 shows two dependency trees for the sentence " the camera is great " in the camera domain and the sentence " the movie is excellent " in the movie domain , respectively .
As can be observed , the relationships between the topic and sentiment words in the two sentences are the same .
They both share a " TOPIC - nsubj - SENTIMENT " relation .
Let the camera domain be the source domain and the movie domain be the target domain .
If the word " excellent " is identified as a common sentiment word , and the " TOPIC - nsubj - SENTIMENT " relation extracted from the camera domain is recognized as a common syntactic pattern , then the word " movie " can be predicted as a topic word in the movie domain with high probability .
After new topic words are extracted in the movie domain , we can apply the same syntactic pattern or other syntactic patterns to extract new sentiment and topic words iteratively .
( a ) Camera domain .
( b ) Movie domain .
Figure 1 : Examples of dependency tree structure .
More specifically , we use the shortest path between a topic word and a sentiment word in the corresponding dependency tree to denote the relation between them .
To get more general paths , we do not take original words in the path into consideration , but use their POS tags instead , such as " NN ", " VB ", " JJ ", etc .
As an example shown in Figure 2 , we can extract two paths or relationships between topic and sentiment words from the dependency tree of the sentence " The movie has good script ": " NN - amod - JJ " from " script " and " good ", and " NN - nsubj - VB - dobj - NN - amod - JJ " from " movie " and " good ".
Figure 2 : Example of pattern extraction .
In the following sections , we present the proposed two - stage domain adaptation framework : 1 ) generating some sentiment and topic seeds in the target domain ; and 2 ) expanding the seeds in the target domain to construct sentiment and topic lexicons .
4 Seed Generation Our basic idea is to first identify several common sentiment words across domains as sentiment seeds .
Meanwhile , we mine some general patterns between sentiment and topic words from the source domain .
Finally , we use the sentiment seeds and general patterns to generate topic seeds in the target domain .
4 . 1 Sentiment Seed Generation To identify common sentiment words across domains , we extract all sentiment words from the source domain as candidates .
For each candidate , we calculate its score based on the following metric : where pS ( wi ) and pT ( wi ) are the probabilities of the word wi occurring in the source and target domains , respectively .
If a word wi has high S1 score , which implies that the word wi occurs frequently and similarly in both domains , then it can be considered as a common sentiment word ( Pan et al ., 2010 ; Blitzer et al ., 2007 ).
We select top r candidates with highest S1 scores as sentiment seeds .
4 . 2 Topic Seed Generation We extract all patterns between sentiment and topic words in the source domain as candidates .
For each pattern candidate , we calculate its score based on a metric defined in AutoSlog - TS ( Riloff , 1996 ): where Acc ( Rj ) is the accuracy of the pattern Rj in the source domain , and Freq ( Rj ) is the frequency of the pattern Rj observed in target domain .
This metric aims to identify the patterns that are precise in the source domain and observed frequently in the target domain .
We also select the top r patterns with highest S2 scores .
With the patterns and sentiment seeds , we extract topic - word candidates and measure their scores based on a variant metric of quadratic combination ( Zhang and Ye , 2008 ): where B is a set of sentiment seeds and A is a set of patterns which the words wi and wk satisfy .
We then select the top r candidates as topic seeds .
5 Seed Expansion After generating the topic and sentiment seeds , we aim to expand them in the target domain to construct topic and sentiment lexicons .
In this section , we propose a new bootstrapping - based method to address this problem .
Bootstrapping is the process ofimproving the performance of a weak classifier by iteratively adding training data and retraining the classifier .
More specifically , bootstrapping starts with a small set of labeled " seeds ", and iteratively adds unlabeled data that are labeled by the classifier to the training set based on some selection criterion , and retrain the classifier .
Many bootstrapping - based algorithms have been proposed to information extraction and other NLP tasks ( Blum and Mitchell , 1998 ; Riloff and Jones , 1999 ; Jones et al ., 1999 ; Wu et al ., 2009 ).
One important issue in bootstrapping is how to design a criterion to select unlabeled data to be added to the training set iteratively .
Our proposed bootstrapping for cross - domain lexicon extraction is based on the following two observations : 1 ) Although the source and target domains are different , part of source domain labeled data is still useful for lexicon extraction in the target domain after some adaptation ; 2 ) The syntactic relationships among sentiment and topic words can be used to expand the seeds in the target domain for lexicon construction .
Based on the two observations , we propose a new bootstrapping - based method named Relational Adaptive bootstraPping ( RAP ), as summarized in Algorithm 1 , for expanding lexicons across domains .
In each iteration , we employ a cross - domain classifier trained on the source domain lexicons and the extracted target domain lexicons to predict the labels of the target unlabeled data , and select top k2predicted topic and sentiment words as candidates based on confidence .
With the extracted syntactic patterns in the previous iterations , we construct a bipartite graph between sentiment and topic words on the extracted target domain lexicons and candidates .
After that , a graph - based score refinement algorithm is performed on the graph , and the top k1 candidates are added to the extracted lexicons based on the final scores .
Accordingly , with the new extracted lexicons , we update the syntactic patterns in each iteration .
The details of RAP are presented in the following sections .
5 . 1 Cross - Domain Classifier In this paper , we employ Transfer AdaBoost ( TrAd - aBoost ) ( Dai et al ., 2007 ) as the cross - domain learning algorithm in RAP .
In TrAdaBoost , each word wSi ( or wTj ) is represented by a feature vector xSi ( or xTj ).
A classifier trained on the source domain data Ds = {( xSi , ySi )} may perform poor on xTjbecause of domain difference .
The main idea of TrAdaBoost is to re - weight the source domain data based on a few of target domain labeled data , which is referred to as seeds in our task .
The re - weighting aims to reduce the effect of the " bad " source domain data while encourage the " good " ones to get a more precise classifier in target domain .
In each iteration of RAP , we train cross - domain classifiers / T and fp for sentiment - and topic - word extraction using TrAdaBoost separately ( taking sentiment or topic words as positive instances ).
We use linear Support Vector Machines ( SVMs ) as the base classifier in TrAdaBoost .
For features to represent each word , we use lexicon features , such as the previous , current and next words , and POS tag features , such as the previous , current and next words ' POS tags .
Algorithm 1 Relational Adaptive bootstraPping Require : Target domain data DT = T > lT \! J T > t , where VlTconsists of sentiment seeds B and topic seeds C and their initial scores Vwi e B and S3 ( wj ), Vwj e C , is the set of unlabeled target domain data ; labeled source domain data DS ; a cross - domain classifier ; iteration number M and candidate selection number k1 , k2 .
Ensure : Expand C and B in the target domain .
1 : Initialize a pattern set A = 0 , S > 1 ( wi ) = S1 ( wi ), wi e B and S3 ( wj ) = S3 ( wj ), wj e C . Consider all patterns observed in the source domain as pattern candidates P . 2 : for m = 1 ... M do 3 : Extract new pattern candidates to P with VlT in target domain , update pattern score S2 ( Rj ), where Rj e P , based on Eq .
( 4 ), and select the top k1 patterns to the pattern set A .
4 : Learn the cross - domain classifiers and / p for sentiment - and topic - word extraction with T > s \! J VlTseparately .
Predict the sentiment score hTO ( wTj ) and topic score hTp ( wTj ) on T > t , and select k2 sentiment words and topic words with highest scores as candidates .
5 : Construct a bipartite graph between sentiment and topic words on VlT and the k2 sentiment - and topic - word candidates , and calculate the normalized weights öij ' s for each edge of the graph .
6 : Refine the scores S1 and S3 of the k2 sentiment and topic word candidates using Eqs .
( 5 ) and ( 6 ) iteratively .
7 : Select k1 new sentiment words and k1 new topic words with the final scores , and add them to lexicons B and C . Update iS1 ( wi ) and S3 ( wj ) accordingly .
9 : return Expanded lexicons B and C . 5 . 2 Graph Construction Based on the cross - domain classifiers and fp , we can predict the sentiment label score hTo ( wTi ) and topic label score hTp ( wTi ) for the target domain data wTi .
According to all predicted values , we respectively select top k2 new sentiment - and topic - words as candidates .
Together with the extracted sentiment and topic lexicons in the target domain , we build a bipartite graph among them as shown in Figure 3 .
In the bipartite graph , one set of nodes represents topic words , including new topic candidates and words in the lexicon C , and the other set of nodes represents sentiment words , including new sentiment candidates and words in the lexicon B .
For a pair of sentiment and topic words and wf , if there is a pattern Rj in the pattern set A that they can satisfy , then there exists an edge eij between them .
Furthermore , each edge eij is associated with a nonnegative weight 6ij , which is measured as follows , 6ij = Y1 RkeE S2 ( Rk ), where S2 is the pattern score .
Similar to the metric defined in Eq .
( 3 ), the pattern score is defined as : where E = {{ wi , Wj }\!, wi G B , Wj G C and wi , Wj satisfy Rj , Rj G A }.
Note that in the beginning of each iteration , S2 is updated based on the new sentiment score S1 and topic score S3 .
We further normalize Oij by Sij = Oij /( Y , ij Oij ).
Topic words Sentiment words Figure 3 : Topic and sentiment word graph .
5 . 3 Score Computation We construct the bipartite graph to exploit the relationships between sentiment and topic words to propagate information for lexicon extraction .
We use the following reinforcement formulas to itera - tively update the final sentiment score S1 ( wTj ) and topic score S3 ( wTi ), respectively : where ß is a trade - off parameter between the predicted value by cross - domain classifier and the reinforcement scores from other nodes connected by edge eij .
Here ß is empirically set to be 0 . 5 .
With Eqs .
( 5 ) and ( 6 ), the sentiment scores and topic scores are iteratively refined until the state of the graph trends to be stable .
This can be considered as an extension to the HITS algorithm ( Kleinberg , 1999 ).
Finally , we select k1 < C k2 sentiment and topic words from the k2 candidates based on their refined scores , and add them to the target domain lexicons , respectively .
We also update the sentiment score S1 and topic score S3 for next iteration .
5 . 4 Special Cases We now introduce two special cases of the RAP algorithm .
( 5 ) and ( 6 ), if the parameter ß = 1 , then RAP only uses the relationships between sentiment and topic words with their patterns to propagate label information in the target domain without using the cross - domain classifier .
We call this reduction relational bootstrapping .
If ß = 0 , then RAP only utilizes useful source domain labeled data to assist learning of the target domain classifier without considering the relationships between sentiment and topic words .
We call this reduction adaptive bootstrapping , which can be considered as a bootstrapping version of TrAdaBoost .
We also empirically study these two special cases in experiments .
6 Experiments on Lexicon Evaluation 6 . 1 Data Set and Evaluation Criteria We use the review dataset from ( Li et al ., 2010a ), which contains 500 movie and 601 product reviews , for evaluation .
The sentiment and topic words are manually annotated .
In this dataset , all types of sentiment words are annotated instead of adjective words only .
For example , the verbs , such as " like ", " recommend ", and nouns , such as " masterpiece ", are also labeled as sentiment words .
We construct two cross - domain lexicon extraction tasks : " product vs . movie " and " movie vs . product ", where the word before " vs ." corresponds with the source domain and the word after " vs ." corresponds with the target domain .
We evaluate our methods in terms of precision , recall and F - score ( F1 ).
6 . 2 Baselines The results of in - domain classifiers , which are trained on plenty of target domain labeled data , can be treated as upper - bounds .
We denote iSVM and iCRF the in - domain SVM and CRF classifiers in experiments , and compare our proposed methods , RAP , relational bootstrapping , and adaptive bootstrapping , with the following baselines , Unsupervised Method ( Un ) we implement a rule - based method for lexicon extraction based on ( Hu and Liu , 2004 ), where adjective words that match a rule is recognized as sentiment words , and nouns that match a rule are recognized as topic words .
Semi - Supervised Method ( Semi ) we implement the double propagation model proposed in ( Qiu et al ., 2009 ).
Since this method requires some target domain labeled data , we manually label 30 sentiment words in the target domain .
Cross - Domain CRF ( Cross - CRF ) we implement a cross - domain CRF algorithm proposed by ( Jakob and Gurevych , 2010 ).
TrAdaBoost We apply TrAdaBoost ( Dai et al ., 2007 ) on the source domain labeled data and the generated seeds in the target domain to train a lexicon extractor .
6 . 3 Comparison Results Comparison results on lexicon extraction are shown in Table 2 and Table 3 .
From Table 2 , we can observe that our proposed methods are effective for sentiment lexicon extraction .
The relational bootstrapping method performs better than the unsuper - vised method , TrAdaBoost and the cross - domain CRF algorithm , and achieves comparable results with the semi - supervised method .
However , compared to the semi - supervised method , our proposed relational bootstrapping method does not require any labeled data in the target domain .
We can also observe that the adaptive bootstrapping method and the RAP method perform much better than other methods in terms of F - score .
The reason is that part of the source domain labeled data may be useful for learning the target classifier after reweighting .
In addition , we also observe that embedding the TrAd - aBoost algorithm into a bootstrapping process can further boost the performance of the classifier for sentiment lexicon extraction .
Table 3 shows the comparison results on topic lexicon extraction .
From the table , we can observe that different from the sentiment lexicon extraction task , the relational bootstrapping method performs better than the adaptive bootstrapping method slightly .
The reason may be that for the sentiment lexicon extraction task , there exist some common sentiment words Table 2 : Results on sentiment lexicon extraction .
Numbers in boldface denote significant improvement .
across domains , thus part of the labeled source domain data may be useful for the target learning task .
However , for the topic lexicon extraction task , the topic words may be totally different , and as a result , we may not be able to find useful source domain labeled data to boost the performance for lexicon extraction in the target domain .
In this case , mutual label propagation between sentiment and topic words may be more reasonable for knowledge transfer .
RAP absorbs the advantages of the adaptive and relational bootstrapping methods , thus can get the best results in both lexicon extraction tasks .
We also observe that relational bootstrapping can get better recall , but lower precision , compared to adaptive bootstrapping .
This is because relational bootstrapping only utilizes the patterns to propagate label information , which may cover more topic and sentiment seeds , but include some noisy words .
For example , given two phases " like the camera " and " recommend the camera ", we can extract a pattern " VB - dobj - NN ".
However , by using this pattern and the topic word " camera ", we may extract " take " as a sentiment word from another phase " take the camera ", which is incorrect .
The adaptive bootstrapping method can utilize various features to make predictions more precisely , which may have higher precision , but encounter the lower recall problem .
For example , " flash " is not identified as a topic word in the target product domain ( camera domain ).
Our RAP method can exploit both relationships between sentiment and topic words and part of labeled source domain data for cross - domain lexicon extraction .
It can correctly identify the above two cases .
6 . 3 . 1 Parameter Sensitivity Study In this section , we conduct experiments to study the effect of different parameter settings .
There are several parameters in the framework : the number of generated seeds r , the number of new candidates k2 and the number of selections k in each iteration , and the number of iterations M ( ß is empirically set to 0 . 5 ).
For the parameter k2 , we just set it to a large number ( k2 = 100 ) such that have rich candidates to build the bipartite graph .
In the experiments reported in the previous section , we set r = 20 , k1 = 10 and M = 50 .
Figures 4 ( a ) and 4 ( b ) show the results under varying values of r in the " product vs . movie " task .
Observe that for sentiment word extraction , the results of the proposed methods are not sensitive to the values of r . While for the topic word extraction , the proposed methods perform well when r falls in the range from 15 to 20 .
( a ) Sentiment word extraction ( b ) Topic word extraction Figure 4 : Results on varying values of r . ( a ) Sentiment word extraction ( b ) Topic word extraction Figure 5 : Results on varying values of M . We also test the sensitivity of the parameter k1 and find that the proposed methods work well and robust when k1 falls in the range from 10 to 20 .
Table 3 : Results on topic lexicon extraction .
Numbers in boldface denote significant improvement .
Figures 5 ( a ) and 5 ( b ) show the results under varying numbers of iterations in the " product vs . movie " task .
As we can see , our proposed methods converge well when M > 40 .
7 Application : Sentiment Classification To further verify the usefulness of the lexicons extracted by the RAP method , we apply the extracted sentiment lexicon for sentiment classification .
7 . 1 Experiment Setting Our work is motivated by the work of ( Pang and Lee , 2004 ), which only used subjective sentences for document - level sentiment classification , instead of using all sentences .
In this experiment , we only use sentiment related words as features to represent opinion documents for classification , instead of using all words .
Our goal is compare the sentiment lexicon constructed by the RAP method with other general lexicons on the impact of for sentiment classification .
The general lexicons used for comparison are described in Table 4 .
We use the dataset from ( Blitzer et al ., 2007 ) for sentiment classification .
It contains a collection of product reviews from Amazon . com .
The reviews are about four product domains : books , dvds , electronics and kitchen appliance .
In each domain , there are 1000 positive and 1000 negative reviews .
To construct domain specific sentiment lexicons , we apply RAP on each product domain with the movie domain described in Section 6 . 1 as the source domain .
Finally , we use linear SVM as the classifier and the classification accuracy as the evaluate criterion .
7 . 2 Experimental Results Experimental results on sentiment classification are shown in Table 5 , where we denote " All " using all unigram and bigram features instead of using subjective words .
As we can see that a classifier trained with features constructed by our RAP method performance best in all domains .
Note that the number of features ( sentiment words ) constructed by our method is much smaller than that of all unigram and bigram features , which can reduce the classifier training time dramatically .
These promising results imply that our RAP can be applied for sentiment classification effectively and efficiently .
Table 5 : Sentiment classification results ( accuracy in %).
Numbers in boldface denotes significant improvement .
8 Conclusions In this paper , we propose a two - stage framework for co - extraction of sentiment and topic lexicons across domains where we have no labeled data in the target domain but have plenty of labeled data in another domain .
In the first stage , we propose a simple strategy to generate a few high - quality sentiment and topic seeds for the target domain .
In the second stage , we propose a novel Relational Adaptive bootstraPping ( RAP ) method to expand the seeds , which can exploit the relationships between topic and opinion words , and make use of part of useful source domain labeled data for help .
Extensive experimental results show our proposed method can extract precise sentiment and topic lexicons from the target domain .
Furthermore , the extracted sentiment lexicon can be applied to sentiment classification effectively .
In the future work , besides the heterogeneous relationships between topic and sentiment words , we intend to investigate the homogeneous relationships among topic words and those among sentiment words ( Qiu et al ., 2009 ) to further boost the performance of RAP method .
Furthermore , in our framework , we do not identify the polarity of the extracted sentiment lexicon .
We also plan to embed this component into our unified framework .
Finally , it is also interesting to exploit multi - domain knowledge ( Li and Zong , 2008 ; Bollegala et al ., 2011 ) for cross - domain lexicon extraction .
9 Acknowledgement This work was supported by the Chinese Natural Science Foundation No . 60973104 , National Key Basic Research Program 2012CB316301 , and Hong Kong RGC GRF Projects 621010 and 621211 .
Table 4 : Description of different lexicons .
