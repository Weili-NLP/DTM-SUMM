Sentiment Aggregation using ConceptNet Ontology Sentiment analysis of reviews traditionally ignored the association between the features of the given product domain .
The hierarchical relationship between the features of a product and their associated sentiment that influence the polarity of a review is not dealt with very well .
In this work , we analyze the influence of the hierarchical relationship between the product attributes and their sentiments on the overall review polarity .
ConceptNet is used to automatically create a product specific ontology that depicts the hierarchical relationship between the product attributes .
The ontology tree is annotated with feature - specific polarities which are aggregated bottom - up , exploiting the ontological information , to find the overall review polarity .
We propose a weakly supervised system that achieves a reasonable performance improvement over the baseline without requiring any tagged training data .
1 Introduction In recent years there has been a huge surge of activity in the social networking sites , blogs and review sites .
The voluminous amount of data generated is a goldmine of information for the retail brands to find out the customer needs , concerns and potential market segments .
Sentiment analysis aims to mine this information to find out the popular sentiment about any product and its associated features .
Traditionally sentiment analysis has been posed as a text classification task on features derived from the given text .
In the product review domain , the initial works in sentiment analysis focused on classifying the entire review as positive or negative using various word - based and phrase - based features ( Turney et al ., 2003 ; Tur - ney 2002 ; Kamps et al ., 2002 ; Hatzivassiloglou et al ., 2000 ; Hatzivassiloglou et al ., 2002 ).
The more recent works focused on product feature extraction from a review and performing feature - specific sentiment analysis ( Hu et al ., 2004 ; Mukherjee et al ., 2012 ).
For example , the review , The audio quality of my new phone is absolutely awesome but the picture taken by the camera is a bit grainy , is positive with respect to the audio quality and negative with respect to the camera .
However , once the feature - specific polarities are obtained , the works do not describe any systematic approach to aggregate the feature - specific polarities to obtain the overall review polarity .
A na√Øve count - based feature - specific polarity aggregation will not work well for reviews having different features with diverse opinions .
A bag - of - words based model will pick up awesome and grainy as the sentiment features and mark the overall review as neutral .
One may argue that the audio quality is more important to a cell phone than the camera and hence the overall review polarity should be positive .
While the feature - specific model associates sentiment to features , it cannot do a polarity aggregation in absence of feature association information to find the overall review polarity .
Let us consider the following review taken from Amazon . com which more clearly depicts the necessity of learning the hierarchical product - attribute relationship and associated sentiments .
It ' s very small , sturdy , and constructed well .
The handling is quite nice with a powder - coated metal frame .
It powers on quickly and the menus are fairly easy to navigate .
The video modes are nice , too .
It works great with my 8GB Eye - Fi SD card .
A new camera isn ' t worth it if it doesn ' t exceed the picture quality of my old 5Mpixel SD400 and this one doesn ' t .
The auto white balance is poor .
I ' d need to properly balance every picture taken so far with the ELPH 300 .
With 12 Mpixels , you ' d expect pretty good images , but the problem is that the ELPH 300 compression is turned up so high that the sensor ' s acuity gets lost ( softened ) in compression .
The above example depicts the complexity involved in analyzing product reviews .
The review has a mix of good and bad comments about various features of the product .
A flat classification model which considers all features to be equally important will fail to capture the proper polarity of the review .
The reviewer seems happy with the camera size , structure , easy use , video modes , SDHC support etc .
However , the auto - white balance and high compression leading to sensor acuity seem to disappoint him .
Now , the primary function of a camera is to take good pictures and videos .
Thus picture , video quality , resolution , color balance etc .
are of primary importance whereas size , video mode , easy use etc ., are secondary in nature .
The overall review polarity should be negative as the reviewer shows concerns about the most important features of the camera .
In this paper , we propose a weakly supervised approach to aggregate the sentiment about various features of a product to give the overall polarity of the review , without requiring expensive labeled training data .
The approach is weakly supervised due to the requirement of ConceptNet ( created by crowd - sourcing ), a dependency parser and a sentiment lexicon .
The objectives of the paper can be summarized as : 1 .
Automatically learning the product - attribute hierarchy from a knowledge resource , where we leverage ConceptNet ( Hugo et al ., 2004 ) to learn the product attributes , synonyms , essential components , functionalities etc .
and create a domain specific ontology tree 2 .
Discovering the various features of a product in the review and extracting feature - specific sentiment 3 .
Mapping the product features with their associated sentiments to the ontology tree and aggregating the feature - specific sentiments to determine the overall review polarity 2 Related Works The initial works in sentiment analysis used bag - of - words features like unigrams , bigrams , adjectives etc .
which gave way to the usage of phrase - based features like part - of - speech sequences ( Ex : adjectives followed by nouns ) ( Turney et al ., 2003 ; Turney 2002 ; Kamps et al ., 2002 ; Hat - zivassiloglou et al ., 2000 ; Hatzivassiloglou et al ., 2002 ).
These works did not consider the attributes or features of the underlying product domain in the review .
A review may contain multiple features with a different opinion about each feature .
This makes it difficult to come up with an overall polarity of the review .
The latter works addressed this issue by focusing on feature - specific sentiment analysis .
Feature - specific sentiment analysis attempts to find the polarity of a review with respect to a given feature .
Approaches like dependency parsing ( Wu et al ., 2009 ; Chen et al ., 2010 ; Mukherjee et al ., 2012 ), joint sentiment topic model using LDA ( Lin et al ., 2009 ) have been used to extract feature - specific expressions of opinion .
Although these works extract the feature - specific polarities , they do not give any systematic approach to aggregate the polarities to obtain the overall review polarity .
Wei et al .
( 2010 ) propose a hierarchical learning method to label a product ' s attributes and their associated sentiments in product reviews using a Sentiment Ontology Tree ( HL SOT ).
Although our work stems from a similar idea , it differs in a number of ways .
The HL - SOT approach is completely supervised , requiring the reviews to be annotated with product - attribute relations , as well as feature - specific opinion expressions .
The approach requires a lot of labeling information which needs to be provided for every domain .
Also , the authors do not describe any elegant approach to aggregate the feature - specific polarities of the children nodes to obtain the overall review polarity .
In this work , we use ConceptNet ( Hugo et al ., 2004 ) as a knowledge resource to automatically construct a domain - specific ontology tree for product reviews , without requiring any labeled training data .
ConceptNet relations have an inherent structure which helps in the construction of an ontology tree from the resource .
Concept - Net has been used in information retrieval tasks in other domains ( Guadarrama et al ., 2008 ; Ko - tov et al ., 2012 ).
But there has been a very few works ( Sureka et al ., 2010 ) in sentiment analysis using ConceptNet .
Unlike the previous works , we present an approach to deal with noisy and one - to - many relations in ConceptNet as well as the myriad of relations and the ensuing topic drift .
We also present a novel sentiment aggregation approach to combine the feature - specific polarities with ontological information to find the overall polarity of the review .
3 Ontology Creation from ConceptNet Ontology can be viewed as a knowledge base , consisting of a structured list of concepts , relations and individuals ( Estival et al ., 2004 ).
The hierarchical relationship between the product attributes can be best captured by an Ontology Tree .
Wei et al .
( 2010 ) use a tree - like ontology structure that represents the relationships between a product ' s attributes or features .
They define a Sentiment Ontology Tree ( SOT ) where each of the non - leaf nodes of the SOT represents an attribute of a camera and all leaf nodes of the SOT represent sentiment ( positive / negative ) nodes respectively associated with their parent nodes .
We adopt a similar idea and consider an Ontology Tree for a product domain ( say , camera ) where the feature nodes ( attributes like body , lens , flash etc .)
are annotated with feature - specific polarities of the review .
Figure 1 .
Snapshot of Camera Ontology Tree The feature nodes in our ontology tree depict features of interest or attributes ( Ex : lens , flash , picture etc .)
of the given product ( Ex : camera ).
The edges in the ontology tree depict the relation type connecting a feature with its parent .
For example , a lens is a partof a camera , a camera is usedfor taking_pictures , timedelay is derived - from time etc .
The feature nodes are annotated with polarities (+ and - denoting positive and negative sentiment , respectively ) of the feature with respect to the review .
Figure 1 shows a snapshot of the ontology tree of a camera for the given example review in Section 1 .
The figure shows more positive feature - polarities than negative feature - polarities , but the review is still negative .
This is because the feature polarities in the higher level of the ontology tree dominate those at a lower level , i . e .
the importance of a feature dilutes with the increase in the ontology depth .
3 . 1 Domain Ontology Tree Creation In this work , we leverage ConceptNet ( Hugo et al ., 2004 ) to construct a domain - specific ontology tree for product reviews .
ConceptNet is a very large semantic network of common sense knowledge which can be used to make various inferences from text .
It is the largest , machine - usable common sense resource consisting of more than 250 , 000 propositions .
Mining information from ConceptNet can be difficult as one - to - many relations , noisy data and redundancy undermine its performance for applications requiring higher accuracy ( Smith et al ., 2004 ).
However , we use ConceptNet for the following reasons : 1 .
The relational predicates in ConceptNet have an inherent structure suitable for building ontology .
For example , relations like partof , hasa , madeof can be readily conceptualized as hierarchical relations .
ConceptNet has a closed class of well - defined relations .
The relations can be suitably weighted and used for various purposes .
The continual expansion of the knowledge resource through crowd - sourcing incorporates new data and enriches the ontology .
Ontology creation using ConceptNet does not require any labeling of product reviews .
3 . 1 . 1 ConceptNet Relations ConceptNet has a closed class of 24 primary relations , expressing connections between various concepts .
camera UsedFor take_picture camera IsA tool_for_take_picture camera AtLocation store tripod UsedFor keep_camera_steady camera CapableOf record_image camera IsA device flash PartOf camera lens AtLocation camera tripod AtLocation camera_shop camera IsA photo_device cannon ConceptuallyRelatedTo camera photograph ConceptuallyRelatedTo camera picture ConceptuallyRelatedTo camera_ Table 1 .
ConceptNet Relation Examples We categorize the ConceptNet relations into 3 primary categories - hierarchical relations , synonymous relations and functional relations .
Hierarchical relations represent parent - child relations and can be used to construct the tree top - down , as the relations are transitive .
Synonymous relations help to identify related concepts .
Thus similar nodes can be merged during tree construction .
Functional relations help to identify the purpose or property of interest of the concept .
The relation categorization helps to weigh various relations differently .
Consider the case where the functional relation " a camera is usedfor tak - ing_picture " may be of more interest to an individual than the hierarchical relation " a camera http :// csc . media . mit . edu / docs / conceptnet / conceptnet4 . html # relations Input : Raw unlabeled corpus of product reviews and ConceptNet Knowledge Network 1 .
Part - of - speech tag the reviews and retrieve all Nouns .
Let N be the set of all potential features .
A feature ni g N is considered relevant and added to the feature set N if tf ‚Äî idf ( ft ) > J , where Jis the corpus threshold 3 .
Let R be the set of all ConceptNet relations which is partitioned into the relation sets H ( hierarchical ), S ( synonymous ) and F ( functional ).
Every relation tuple rtj ( ft , fj ) g R is assigned to one of the sets S , F or H with ties being broken as H > S > F 5 .
Construct the ontology tree T ( V , E ) top - down .
The root of the tree is taken as the domain name .
Initially V = { domain_name }, E = { f } .
Add a vertex v .
to V and an edge e ( v v ) to E ," r ‚Äû( vi , vj ) g H s . t .
Merge v , with vi " r .. ( v . v .) g S s . t v . g V and vj g N 8 .
Add a vertex v J to V and an edge eiJ ( vi , vJ ) to E , " rv ( vi , vJ ) g F s . t .
vi g V and vj g N Output : T ( V , E ) hasa tripod ".
Thus a product which takes good pictures but lacks a tripod will have a high positive polarity .
This is , of course , subjective and can be used to personalize the ontology tree .
The other advantage of relation categorization is to deal with one - to - many relations , as will be discussed in the next section .
Hierarchical : LocatedNear , HasA , PartOf , MadeOf , IsA , InheritsFrom Synonymous : Synonym , ConceptuallyRelatedTo Functional : UsedFor , CapableOf , HasProperty , DefinedAs Table 2 .
ConceptNet Relation Type Categorization 3 . 1 . 2 Algorithm for Ontology Construction Ontology construction from ConceptNet is hindered by the following obstacles : 1 .
One - to - many relations exist between the concepts .
For example , the concepts camera and picture can be associated by relations like - camera UsedFor take_picture , camera HasA picture , picture ConceptuallyRelatedTo camera , picture AtLocation camera etc .
There is a high degree of topic drift during relation extraction .
For example , the predicates camera HasA lens , lens IsA glass and glass HasA water places water at a high level in the ontology tree , although it is not at all related to camera .
The hierarchical relations in ConceptNet are much more definitive , have much less topic drift and can be used to ground the ontology tree .
Hence , they are preferred over other relations during a relational conflict .
In the above example , where picture is ConceptuallyRelatedTo camera , putting camera and picture at the same level will generate an incorrect ontology tree .
The issue can be averted by preferring the hierarchical relation between camera and picture over the synonymous relation .
The relational conflict is averted by ordering the predicate relations where hierarchical relations > synonymous relations > functional relations .
In order to avoid topic drift , the ontology feature nodes extracted from ConceptNet are constrained to belong to a list of frequently found concepts in the domain , which is obtained from an unlabeled corpus .
In the first step of ontology construction , all the unlabeled reviews in the corpus are Part - of - Speech tagged and all Nouns are retrieved .
The frequently occurring concepts are then added to the feature set .
In the second step , the Concept - Net relations are partitioned into three disjoint sets hierarchical , synonymous and functional .
The domain name is taken as the root of the Ontology Tree .
Algorithm 1 .
Ontology Tree Construction from ConceptNet The hierarchical relation set is taken first , and the tree is constructed recursively , such that the parent concept in any hierarchical relation is already in the tree and the child concept belongs to the set of frequently occurring concepts in the domain .
The synonymous relation set is taken next , and similar concepts are merged recursively , such that one of the concepts in any synonymous relation is already in the tree and the other concept belongs to the frequently occurring feature set .
In the last step , the functional relation set is taken and processed in the same way as the hierarchical relation set .
The constructed ontology tree depicts the product attributes in the domain and the different parent - child relations .
The ontology creation does not require any labeled training data .
Algorithm 1 shows the detailed steps for the ontology creation .
Figure 1 shows a snapshot of the constructed ontology .
3 . 2 Feature Specific Sentiment Extraction A review or a given sentence may contain multiple features with a different opinion regarding each feature .
Given a sentence and a target feature , it is essential to obtain the polarity of the sentence with respect to the feature .
For example the sentence , " The movie had a nice plot but the acting was too shabby ", is positive with respect to plot but negative with respect to acting .
In this work , we use the feature - specific sentiment extraction approach in Mukherjee et al .
( 2012 ), which do not need labeled review data for training .
The authors use Dependency Parsing to capture the association between any specific feature and the expressions of opinion that come together to describe that feature .
Given a sentence S , let W be the set of all words in the sentence .
Let R be the list of significant dependency parsing relations ( like nsubJ , dobJ , advmod , amod etc .
), which are learnt from a corpus .
A Graph G ( W , E ) is constructed such that any wt , wj gW are directly connected by ek g E , if3Rls . t .
R ( ri , rJ ) g R . The Nouns are extracted by a POS - Tagger which form the initial feature set F . Let fi G F be the target feature .
We initialize ' n ' clusters Ci , corresponding to each feature ft g F s . t .
We assign each word wi G S to the cluster whose clusterhead is closest to it .
The distance is measured in terms of the number of edges in the shortest path , connecting any word and a cluster - head .
Any two clusters are merged if the distance between their clusterheads is less than some threshold .
Finally , the set of words in the cluster Ct , corresponding to the target feature ft gives the opinion about ft .
The words in the cluster Ct are classified with the help of a lexicon ( maJority voting ) to find the polarity pt g {‚Äî 1 , 0 , 1 } about the target feature ft . 3 . 3 Sentiment Aggregation Consider the camera review example in Section 1 , and Figure 1 where the facets of the review are mapped to the camera ontology with their specific polarities .
It can be observed that the product attributes at a higher level of the tree dominate those at the lower level .
If a reviewer says something positive or negative about a particular feature , which is at a higher level in the ontology tree ( say picture ), it weighs more than the information of all its children nodes ( say light , resolution , color and compression ).
This is because the parent feature abstracts the information of its children features .
The feature importance is captured by the height of a feature node in the ontology tree .
In case the parent feature polarity is neutral , its polarity is given by its children feature polarities .
Thus the information at a particular node is given by its self information and the weighted information of all its children nodes .
The information propagation is done bottom - up to determine the information content of the root node , which gives the polarity of the review .
Consider the ontology tree T ( V , E ) where Vi g V is a product attribute set .
The product attribute set Vi is represented by the tuple Vi = { f , pi , hi } , where f is a product feature , pi is the review polarity score with respect to fiand hi is the height of the product attribute in the ontology tree .
eiJ g E is an attribute relation type ( Section 3 . 1 . 1 ) connecting f g Vi , fj gVj and V y . g V . Let V be the Jth child of V .
The positive sentiment weight ( PSW ) and negative sentiment weight ( NSW ) of a vertex Vtare defined as , PSW ( V ) = h x p + + XJ PSW V ) x uvNSW V ) = h x p ‚Äî + XJ NSW ( Vj ) x uvwhere p + g { 0 , 1 } and p ‚Äî g {‚Äî 1 , 0 }.
The review polarity is given by the expected sentiment - weight ( ESW ) of the tree defined as , Consider Figure 1 and assume the edge - weights of the tree to be 1 .
Figure 2 shows a snapshot of the camera ontology tree annotated with positive and negative sentiment weights .
Each feature node fi is annotated with a tuple [ pi + , pi -] corresponding to its positive sentiment weight and negative sentiment weight respectively .
Absence of a weight indicates that the feature node has a neutral sentiment .
The figure depicts the importance of hierarchical learning as the negative sentiment weight of picture , at a higher level of the tree , dominates the positive sentiment weight of the other feature nodes at a lower level in the tree , resulting in the overall review polarity being negative .
accessories glass shutter magnify light resolution color ' compression " time capture image resolution card handling menus size Figure 2 .
Snapshot of Camera Ontology Tree with Sentiment Weights 4 Experimental Evaluation Analysis is performed in three domains corresponding to automobile , camera and software .
4 . 1 Dataset Preparation Table 3 .
Dataset Statistics The camera reviews are collected from Amazon . com and manually tagged as positive or negative .
The automobile and software reviewsare taken from Blitzer et al .
Table 3 shows the dataset statistics .
All the words are lemmatized in the reviews so that camera and cameras are reduced to the same root word camera .
Words like hvnt , dnt , cnt , shant etc .
are replaced with their proper form in both our model and the baseline to capture negation .
4 . 2 Baselines In this work , we consider three unsupervised baselines to compare the proposed approach .
Lexical Baseline : Lexical classification ( Taboada et al ., 2011 ) is taken as the first baseline for our work .
A sentiment lexicon is taken which contains a list of positive and negative terms .
If the number of positive terms is greater than the number of negative terms , the review is considered to be positive and negative otherwise .
The same approach is also used in our work while finding the polarity of the cluster representing the feature - specific opinion about a review .
The lexical baseline considers all unigrams to be equally important , whereas we distinguish features by their position in the ontology hierarchy .
This baseline model does not incorporate feature - specificity .
We experimented with three publicly available lexicons to obtain unigram polarities : 1 .
SentiWordNet 3 . 0 ( Baccianella et al ., 2 .
Corpus Feature - Specific Baseline : Tf - Idf measure is used to obtain the frequently occurring concepts in the domain from an unlabeled corpus .
A feature - specific sentiment extraction model ( Mukherjee et al ., 2012 ) is used to find the review polarity regarding each feature .
A linear aggregation of the feature - specific polarities is done to obtain the overall review polarity .
If the aggregation of the positive feature - specific polarities is greater than the aggregation of the negative feature - specific polarities , the review is considered to be positive and negative otherwise .
This model resembles the approach of LARA ( Wang et al .
, 2010 ) in a loose way , where the authors jointly learn the feature weights and feature - specific polarities .
ConceptNet and Corpus Feature - Specific Baseline : In this baseline , the features are extracted using ConceptNet and an unlabeled corpus using Algorithm 1 .
The feature set F = H v S v F is considered and the same feature - specific sentiment extraction model is used to aggregate all the feature - specific polarities in the set .
All the baselines lack sentiment aggregation ( refer Section 3 . 3 ) using ontological information .
A simple negation handling approach is used both in our work and the baselines .
A window of size 5 ( Hu et al ., 2004 ) is taken and polarities of all the words appearing in the window starting from any of the negation operators not , neither , nor and no are reversed .
Table 4 shows the three baselines and the proposed approach with the different features used in the models . '
http :// www . cs . jhu .
edu /~ mdredze / datasets / sentiment / Table 4 .
Models and Baselines 4 . 3 Results Stanford Pos - Tagger is used to part - of - speech tag the reviews to find the frequently occurring concepts ( Nouns ) in the domain .
The ontology construction is done using ConceptNet 5 .
The depth of the ontology tree is taken till level 4 .
The ontology depth has been empirically fixed .
Further increase in depth leads to topic drift and domain concept dilution .
Table 5 shows the number of frequently occurring concepts in the corpus , and the total number of nodes , leaf nodes and edges in the ontology tree for each domain .
Table 5 .
Ontology Tree Statistics Table 6 .
Lexical Baselines Table 6 shows the accuracy of the three lexical baselines in different domains in the dataset .
Stanford Dependency Parser is used to parse the reviews for dependency extraction during feature - specific sentiment analysis ( refer Section http :// nlp . stanford . edu / software / tagger . shtml http :// conceptnet5 . media . mit . edu / http :// nlp . stanford . edu / software / lex - parser . shtml 3 . 2 ).
All the edge weights uiJ - are taken to be 1 .
Table 7 shows the overall accuracy comparison of the proposed approach with the baselines .
Bing Liu sentiment lexicon is used in all the approaches as it is found to deliver a better performance compared to the other lexicons in our model .
Table 7 .
Overall Accuracy of All Models Figure 3 shows the accuracy of different models on the positive and negative dataset in each domain .
Figure 3 .
Positive and Negative Accuracy of Models in Each Domain 5 Discussions In this section , we discuss the observations from the experimental results of using sentiment aggregation approach with ConceptNet Ontology .
Ontology Construction : The first part of our work outlines an approach to leverage Con - ceptNet to construct a domain - specific ontology for product reviews .
It is a difficult task to evaluate the purity of any ontology .
In our work , we only perform a qualitative analysis where the constructed ontology is found to contain most of the relevant concepts in the given domain with appropriate hierarchy .
It is observed that 75 . 75 % of the concepts in the automobile domain are mapped to some relevant concept in the corresponding product ontology ; the corresponding figures for the camera and software domain being 43 . 49 % and 3 .
ConceptNet and Corpus Feature - Specific 74 . 90 % respectively .
In the camera domain , although the number of ontology feature nodes is much less than the frequently occurring concepts in the reviews , the proposed model performs much better than the baseline , which considers all features to be equally relevant .
This shows that the ontology feature nodes capture concepts which are most relevant to the product and hence , makes a difference to the overall review polarity .
Lexical Baseline Performance : General Inquirer and Bing Liu sentiment lexicons outperform SentiWordNet in our dataset .
Bing Liu sentiment lexicon was subsequently found to work better in our model than General Inquirer .
Corpus Feature - Specific Baseline : A significant accuracy improvement is observed over the lexical baseline due to the consideration of feature - specific polarities of relevant features mined from the frequently occurring concepts in the domain corpus .
Baseline : Incorporating ConceptNet information during the feature extraction process from the corpus improves the model performance .
Only the features that frequently occur in the domain and form an important concept in the ontology hierarchy are retained .
Sentiment Aggregation : The model using sentiment aggregation approach by combining the feature - specific polarities with ontology information achieved the best accuracy in all the three domains .
Negative Opinion Detection : Reviews have much more explicit positive expressions of opinion than negative ones ( Kennedy et al ., 2006 ; Voll et al ., 2007 ; Mukherjee et al ., 2012 ).
This is because negative emotions are often very implicit and difficult to capture , as in sarcasm and thwarting .
This is evident from Figure 3 , where the lexical baseline attains a high accuracy on positive reviews in all the domains , but fares very poorly on negative reviews .
The other two models , on the other hand , perform much better on the negative reviews .
This shows that the ontology based sentiment extraction method is able to capture negative sentiment much more strongly .
The model also paves the way for analyzing reviews which contain more positive expressions of opinion than negative ones , but are still tagged as negative ; which cannot be captured by a feature - counting classifier .
Sentiment Ontology Tree Personalization : In this work , we have assumed all relations to be equally important , and thus considered the edge weights in the tree to be 1 .
However , the model allows the ontology tree to be personalized to suit the purpose of an individual and incorporate subjectivity in the reviews .
If an individual prefers functional relations or use of certain features over its components , this information can be incorporated in the tree .
This allows the general domain - specific ontology tree to be customized to an individual ' s interest .
6 Conclusions and Future Work In this work , we outline an approach to combine the feature - specific polarities of a review with ontology information to give better sentiment classification accuracy .
The proposed approach leverages ConceptNet to automatically construct a domain specific ontology tree .
We performed experiments in multiple domains to show the performance improvement induced by the sentiment aggregation approach using ontology information over simple aggregation of feature - specific polarities .
The work is mostly unsupervised , requiring no labeled training reviews .
The performance of the classifier is subject to the coverage of the lexicon and the accuracy of the feature - specific classifier .
The work also addresses the idea of personalizing a sentiment ontology tree to suit an individual ' s interest over specific features and parent - feature relations .
This is also the first work , to the best of our knowledge , to discuss an approach to deal with reviews having majority positive ( or negative ) features but still tagged as negative ( or positive ).
Reviews , of such kind , can be aptly handled using ontology information which captures the intrinsic specificities of product - feature relations in a given product domain .
