DualSum : a Topic - Model based approach for update summarization Update summarization is a new challenge in multi - document summarization focusing on summarizing a set of recent documents relatively to another set of earlier documents .
We present an unsupervised probabilistic approach to model novelty in a document collection and apply it to the generation of update summaries .
The new model , called DualSum , results in the second or third position in terms of the ROUGE metrics when tuned for previous TAC competitions and tested on TAC - 2011 , being statistically indistinguishable from the winning system .
A manual evaluation of the generated summaries shows state - of - the art results for DualSum with respect to focus , coherence and overall responsiveness .
1 Introduction Update summarization is the problem of extracting and synthesizing novel information in a collection of documents with respect to a set of documents assumed to be known by the reader .
This problem has received much attention in recent years , as can be observed in the number of participants to the special track on update summarization organized by DUC and TAC since 2007 .
The problem is usually formalized as follows : Given two collections A and B , where the documents in A chronologically precede the documents in B , generate a summary of B under the assumption that the user of the summary has already read the documents in A . Extractive techniques are the most common approaches in multi - document summarization .
Summaries generated by such techniques consist of sentences extracted from the document collection .
Extracts can have coherence and cohesion problems , but they generally offer a good tradeoff between linguistic quality and informative - ness .
While numerous extractive summarization techniques have been proposed for multi - document summarization ( Erkan and Radev , 2004 ; Radev et al ., 2004 ; Shen and Li , 2010 ; Li et al ., 2011 ), few techniques have been specifically designed for update summarization .
Most existing approaches handle it as a redundancy removal problem , with the goal of producing a summary of collection B that is as dissimilar as possible from either collection A or from a summary of collection A .
A problem with this approach is that it can easily classify as redundant sentences in which novel information is mixed with existing information ( from collection A ).
Furthermore , while this approach can identify sentences that contain novel information , it cannot model explicitly what the novel information is .
Recently , Bayesian models have successfully been applied to multi - document summarization showing state - of - the - art results in summarization competitions ( Haghighi and Vanderwende , 2009 ; Jin et al ., 2010 ).
These approaches offer clear and rigorous probabilistic interpretations that many other techniques lack .
Furthermore , they have the advantage of operating in unsupervised settings , which can be used in real - world scenarios , across domains and languages .
To our best knowledge , previous work has not used this approach for update summarization .
In this article , we propose a novel nonpara - metric Bayesian approach for update summarization .
Our approach , which is a variation of Latent Dirichlet Allocation ( LDA ) ( Blei et al ., 2003 ), aims to learn to distinguish between common information and novel information .
We have evaluated this approach on the ROuGE scores and demonstrate that it produces comparable results to the top system in TAC - 2011 .
Furthermore , our approach improves over that system when evaluated manually in terms of linguistic quality and overall responsiveness .
2 Related work 2 . 1 Bayesian approaches in Summarization Most Bayesian approaches to summarization are based on topic models .
These generative models represent documents as mixtures of latent topics , where a topic is a probability distribution over words .
In TOPICSuM ( Haghighi and Vander - wende , 2009 ), each word is generated by a single topic which can be a corpus - wide background distribution over common words , a distribution of document - specific words or a distribution of the core content of a given cluster .
BAYESSuM ( Daume and Marcu , 2006 ) and the Special Words and Background model ( Chemudugunta et al ., 2006 ) are very similar to TOPICSUM .
A commonality of all these models is the use of collection and document - specific distributions in order to distinguish between the general and specific topics in documents .
In the context of summarization , this distinction helps to identify the important pieces of information in a collection .
Models that use more structure in the representation of documents have also been proposed for generating more coherent and less redundant summaries , such as HIERSUM ( Haghighi and Vanderwende , 2009 ) and TTM ( Celikyilmaz and Hakkani - Tur , 2011 ).
For instance , HIERSUM models the intuitions that first sentences in documents should contain more general information , and that adjacent sentences are likely to share specic content vocabulary .
However , HIERSUM , which builds upon TOPICSUM , does not show a statistically signicant improvement in ROUGE over TOPICSUM .
A number of techniques have been proposed to rank sentences of a collection given a word distribution ( Carbonell and Goldstein , 1998 ; Goldstein et al ., 1999 ).
The Kullback - Leibler divergence ( KL ) is a widely used measure in summarization .
Given a target distribution T that we want a summary S to approximate , KL is commonly used as the scoring function to select the subset of sentences S * that minimizes the KL divergence with T : where w is a word from the vocabulary V . This strategy is called KLSum .
Usually , a smoothing factor t is applied on the candidate distribution S in order to avoid the divergence to be undefined .
This objective function selects the most representative sentences of the collection , and at the same time it also diversifies the generated summary by penalizing redundancy .
Since the problem of finding the subset of sentences from a collection that minimizes the KL divergence is NP - complete , a greedy algorithm is often used in practice .
Some variations of this objective function can be considered , such as penalizing sentences that contain document - specific topics ( Mason and Charniak , 2011 ) or rewarding sentences appearing closer to the beginning of the document .
Wang et al .
( 2009 ) propose a Bayesian approach for summarization that does not use KL for reranking .
In their model , Bayesian Sentence - based Topic Models , every sentence in a document is assumed to be associated to a unique latent topic .
Once the model parameters have been calculated , a summary is generated by choosing the sentence with the highest probability for each topic .
While hierarchical topic modeling approaches have shown remarkable effectiveness in learning the latent topics of document collections , they are not designed to capture the novel information in a collection with respect to another one , which is the primary focus of update summarization .
2 . 2 Update Summarization The goal of update summarization is to generate an update summary of a collection B of recent documents assuming that the users already read earlier documents from a collection A .
We refer to collection A as the base collection and to collection B as the update collection .
In our experiments we set t = 0 . 01 .
In our experiments , we follow the same approach as in ( Haghighi and Vanderwende , 2009 ) by greedily adding sentences to a summary so long as they decrease KL divergence .
Update summarization is related to novelty detection which can be defined as the problem of determining whether a document contains new information given an existing collection ( Soboroff and Harman , 2005 ).
Thus , while the goal of novelty detection is to determine whether some information is new , the goal of update summarization is to extract and synthesize the novel information .
Update summarization is also related to con - trastive summarization , i . e .
the problem of jointly generating summaries for two entities in order to highlight their differences ( Lerman and McDonald , 2009 ).
The primary difference here is that update summarization aims to extract novel or updated information in the update collection with respect to the base collection .
The most common approach for update summarization is to apply a normal multi - document summarizer , with some added functionality to remove sentences that are redundant with respect to collection A .
This can be achieved using simple filtering rules ( Fisher and Roark , 2008 ), Maximal Marginal Relevance ( Boudin et al ., 2008 ), or more complex graph - based algorithms ( Shen and to boost sentences in B that bring out completely novel information .
One problem with this approach is that it is likely to discard as redundant sentences in B containing novel information if it is mixed with known information from collection A .
Another approach is to introduce specific features intended to capture the novelty in collection B .
For example , comparing collections A and B , FastSum derives features for the collection B such as number of named entities in the sentence that already occurred in the old cluster or the number of new content words in the sentence not already mentioned in the old cluster that are subsequently used to train a Support Vector Machine classifier ( Schilder et al ., 2008 ).
A limitation with this approach is there are no large training sets available and , the more features it has , the more it is affected by the sparsity of the training data .
3 DualSum 3 . 1 Model Formulation The input for DualSum is a set of pairs of collections of documents C = {( Ai , Bi )} i = i ... TO , where Ai is a base document collection and Bi is an update document collection .
We use c to refer to a collection pair ( Ac , Bc ).
In DualSum , documents are modeled as a bag of words that are assumed to be sampled from a mixture of latent topics .
Each word is associated with a latent variable that specifies which topic distribution is used to generate it .
Words in a document are assumed to be conditionally independent given the hidden topic .
As in previous Bayesian works for summarization ( Daume and Marcu , 2006 ; Chemudugunta et al ., 2006 ; Haghighi and Vanderwende , 2009 ), DualSum not only learns collection - specific distributions , but also a general background distribution over common words , fffG and a document - specific distribution ffcd for each document d in collection pair c , which is useful to separate the specific aspects from the general aspects of c . The main novelty is that DualSum introduces specific machinery for identifying novelty .
To capture the differences between the base and the update collection for each pair c , DualSum learns two topics for every collection pair .
The joint topic , ffAc captures the common information between the two collections in the pair , i . e .
the main event that both collections are discussing .
The update topic , ffBc focuses on the specific aspects that are specific of the documents inside the update collection .
In the generative model , • For a document d in a collection Ac , words can be originated from one of three different topics : ffG , fffcd and ffAc , the last one of which captures the main topic described in the collection pair .
• For a document d in a collection Bc , words can be originated from one of four different topics : fffG , fcd , ff ) Ac and fBc .
The last one will capture the most important updates to the main topic .
To make this representation easier , we can also state that both collections are generated from the four topics , but we constrain the topic probability 1 .
Sample fG - Dir ( XG )• Sample fAc — Dir ( X ^) • Sample ffBc — Dir ( AB ) • For each document d of type ucd e { A , B }: - Sample fcd — Dir ( AD ) - For each word w in document d : ( b ) Sample a word w — Mult ( fz ) Figure 1 : Generative model in DualSum .
Figure 2 : Graphical model representation of Dual - Sum .
for ffBc to be always zero when generating a base document .
We denote ucd e { A , B } the type of a document d in pair c . This is an observed , Boolean variable stating whether the document d belongs to the base or the update collection inside the pair c . The generation process of documents in Du - alSum is described in Figure 1 , and the plate diagram corresponding to this generative story is shown in Figure 2 .
DualSum is an LDA - like model , where topic distributions are multinomial distributions over words and topics that are sampled from Dirichlet distributions .
We use A = ( Ag , Ad , Aa , Ab ) as symmetric priors for the Dirichlet distributions generating the word distributions .
In our experiments , we set AG = 0 . 1 and Ad = Aa = AB = 0 . 001 .
A greater value is assigned to AG in order to reflect the intuition that there should be more words in the background than in the other distributions , so the mass is expected to be shared on a larger number of words .
Unlike for the word distributions , mixing probabilities are drawn from a Dirichlet distribution with asymmetric priors .
The prior knowledge about the origin of words in the base and update collections is again encoded at the level the hyper - parameters .
For example , if we set ya = ( 5 , 3 , 2 , 0 ), this would reflect the intuition that , on average , in the base collections , 50 % of the words originate from the background distribution , 30 % from the document - specific distribution , and 20 % from the joint topic .
Similarly , if we set yb = ( 5 , 2 , 2 , 1 ), the prior reflects the assumption that , on average , in the update collections , 50 % of the words originate from the background distribution , 20 % from the document - specific distribution , 20 % from the joint topic , and 10 % from the novel , update topic .
The priors we have actually used are reported in Section 4 .
3 . 2 Learning and inference In order to find the optimal model parameters , the following equation needs to be computed : Omitting hyper - parameters for notational simplicity , the joint distribution over the observed variables is : n p ( ucd ) p ( fcd ) I p ( vcdiucd ) dv > cd x where A denotes the 4 - dimensional simplex .
Since this equation is intractable , we need to perform approximate inference in order to estimate the model parameters .
A number of Bayesian statistical inference techniques can be used to address this problem .
To highlight the difference between asymmetric and symmetric priors we put the indices in superscript and subscript respectively .
Remember that , for base documents , words cannot be generated by the update topic , so A denotes the 3 - dimensional simplex for base documents .
Variational approaches ( Blei et al ., 2003 ) and collapsed Gibbs sampling ( Griffiths and Steyvers , 2004 ) are common techniques for approximate inference in Bayesian models .
They offer different advantages : the variational approach is arguably faster computationally , but the Gibbs sampling approach is in principal more accurate since it asymptotically approaches the correct distribution ( Porteous et al ., 2008 ).
In this section , we provide details on a collapsed Gibbs sampling strategy to infer the model parameters of DualSum for a given dataset .
Collapsed Gibbs sampling is a particular case of Markov Chain Monte Carlo ( MCMC ) that involves repeatedly sampling a topic assignment for each word in the corpus .
A single iteration of the Gibbs sampler is completed after sampling a new topic for each word based on the previous assignment .
In a collapsed Gibbs sampler , the model parameters are integrated out ( or collapsed ), allowing to only sample z .
Let us call wcdn the n - th word in document d in collection c , and zcdn its topic assignment .
For Gibbs sampling , we need to calculate p ( zcdn \! w , u , z - cdn ) where z - cdn denotes the random vector of topic assignments except the assignment zcdn .
where K = { G , cd , Ac , Bc }, n - v <) dn j denotes the number of times word v is assigned to topic j excluding current assignment of word wcdn and n - cdn k denotes the number of words in document d of collection c that are assigned to topic j excluding current assignment of word wcdn .
After each sampling iteration , the model parameters can be estimated using the following for - mulas .
The interested reader is invited to consult ( Wang , 2011 ) for more details on using Gibbs sampling for LDA - like models where k e K , denotes the number of times word v is assigned to topic k , and nkcd ) denotes the number of words in document d of collection c that are assigned to topic k . By the strong law of large numbers , the average of sample parameters should converge towards the true expected value of the model parameter .
Therefore , good estimates of the model parameters can be obtained averaging over the sampled values .
As suggested by Gamerman and Lopes ( 2006 ), we have set a lag ( 20 iterations ) between samples in order to reduce auto - correlation between samples .
Our sampler also discards the first 100 iterations as burn - in period in order to avoid averaging from samples that are still strongly influenced by the initial assignment .
4 Experiments in Update Summarization The Bayesian graphical model described in the previous section can be run over a set of news collections to learn the background distribution , a joint distribution for each collection , an update distribution for each collection and the document - specific distributions .
Once this is done , one of the learned collections can be used to generate the summary that best approximates this collection , using the greedy algorithm described by Haghighi and Vanderwende ( 2009 ).
Still , there are some parameters that can be defined and which affects the results obtained : • Dual Sum ' s choice of hyper - parameters affects how the topics are learned .
• The documents can be represented with n - grams of different lengths .
• It is possible to generate a summary that approximates the joint distribution , the update - only distribution , or a combination of both .
This section describes how these parameters have been tuned .
4 . 1 Parameter tuning datasets as training set for tuning the hyperparameters for the model , namely the pseudo - counts for the two Dirichlet priors that affects the topic mix assignment for each document .
By performing a grid search over a large set of possible hyper - parameters , these have been fixed to YA = ( 90 , 190 , 50 , 0 ) and yb = ( 90 , 170 , 45 , 25 ) as the values that produced the best ROUGE - 2 score on those two datasets .
Regarding the base collection , this can be interpreted as setting as prior knowledge that roughly 27 % of the words in the original dataset originate from the background distribution , 58 % from the document - specific distributions , and 15 % from the topic of the original collection .
We remind the reader that the last value in ya is set to zero because , due to the problem definition , the original collection must have no words generated from the update topic , which reflects the most recent developments that are still not present in the base collections A .
Regarding the update set , 27 % of the words are assumed to originate again from the background distribution , 51 % from the document - specific distributions , 14 % from an topic in common with the original collection , and 8 % from the update - specific topic .
One interesting fact to note from these settings is that most of the words belong to topics that are specific to single documents ( 58 % and 51 % respectively for both sets A and B ) and to the background distribution , whereas the joint and update topics generate a much smaller , limited set of words .
This helps these two distributions to be more focused .
The other settings mentioned at the beginning of this section have been tuned using the TAC - 2010 dataset , which we reserved as our development set .
Once the different document - specific and collection - specific distributions have been obtained , we have to choose the target distribution T to with which the possible summaries will be compared using the KL metric .
Usually , the human - generated update summaries not only include the terms that are very specific about the last developments , but they also include a little background regarding the developing event .
Therefore , we try , for KLSum , a simple mixture between the joint topic ( ffA ) and the update topic Figure 3 shows the ROUGE - 2 results obtained as we vary the mixture weight between the joint ffA distribution and the update - specific ffB distribution .
As can be seen at the left of the curve , using only the update - specific model , which disregards the generic words about the topic described , produces much lower results .
The results improve as the relative weight of the joined topic model Figure 3 : Variation in ROUGE - 2 score in the TAC - 2010 dataset as we change the mixture weight for the joined topic model between 0 and 1 .
Figure 4 : Effect of the mixture weight in ROUGE - 2 scores ( TAC - 2010 dataset ).
Results are reported using bigrams ( above , blue ), unigrams ( middle , red ) and trigrams ( below , yellow ).
increases until it plateaus at a maximum around roughly the interval [ 0 . 6 , 0 . 8 ], and from that point performance slowly degrades as at the right part of the curve the update model is given very little importance in generating the summary .
Based on these results , from this point onwards , the mixture weight has been set to 0 . 7 .
Note that using only the joint distribution ( setting the mixture weight to 1 . 0 ) also produces reasonable results , hinting that it successfully incorporates the most important n - grams from across the base and the update collections at the same time .
A second parameter is the size of the n - grams for representing the documents .
The original implementations of SumBasic ( Nenkova and Vanderwende , 2005 ) and TopicSum ( Haghighi and Vanderwende , 2009 ) were defined over single words ( unigrams ).
Still , Haghighi and Van - derwende ( 2009 ) report some improvements in the ROUGE - 2 score when representing words as a bag of bigrams , and Darling ( 2010 ) mention similar improvements when running SUMBASIC with bigrams .
Figure 4 shows the effect on the ROUGE - 2 curve when we switch to using uni - grams and trigrams .
As stated in previous work , using bigrams has better results than using uni - grams .
Using trigrams was worse than either of them .
This is probably because trigrams are too specific and the document collections are small , so the models are more likely to suffer from data sparseness .
4 . 2 Baselines DualSum is a modification of TopicSum designed specifically for the case of update summarization , by modifying TopicSum ' s graphical model in a way that captures the dependency between the joint and the update collections .
Still , it is important to discover whether the new graphical model actually improves over simpler applications of TopicSum to this task .
The three baselines that we have considered are : • Running TOPICSUM on the set of collections containing only the update documents .
We call this run TopicSumb .
• Running TOPICSUM on the set of collections containing both the base and the update documents .
Contrary to the previous run , the topic model for each collection in this run will contain information relevant to the base events .
We call this run TopicSumaub .
• Running TOPICSUM twice , once on the set of collections containing the update documents , and the second time on the set of collections containing the base documents .
Then , for each collection , the obtained base and update models are combined in a mixture model using a mixture weight between zero and one .
The weight has been tuned using TAC - 2010 as development set .
We call this run TopicSuma + TopicSumb .
4 . 3 Automatic evaluation DualSum and the three baselines have been automatically evaluated using the TAC - 2011 dataset .
Table 1 shows the ROUGE results obtained .
Because of the non - deterministic nature of Gibbs sampling , the results reported here are the average of five runs for all the baselines and for DualSum .
DualSum outperforms two of the baselines in all three ROUGE metrics , and it also outperforms TopicSumb on two of the three metrics .
Using the settings obtained in the previous section , having been optimized on the datasets from previous TAC competitions .
The top three systems in TAC - 2011 have been included for comparison .
The results between these three systems , and between them and DualSum , are all indistinguishable at 95 % confidence .
Note that the best baseline , TopicSumb , is quite competitive , with results that are indistinguishable to the top participants in this year ' s evaluation .
Note as well that , because we have five different runs for our algorithms , whereas we just have one output for the TAC participants , the confidence intervals in the second case were slightly bigger when checking for statistical significance , so it is slightly harder for these systems to assert that they outperform the baselines with 95 % confidence .
These results would have made DualSum the second best system for ROUGE - 1 and ROuGE - Su4 , and the third best system in terms of ROUGE - 2 .
The supplementary materials contain a detailed example of the the topic model obtained for the background in the TAC - 2011 dataset , and the base and update models for collection D1110 .
As expected , the top unigrams and bigrams are all closed - class words and auxiliary verbs .
Because trigrams are longer , background trigrams actually include some content words ( e . g .
university or director ).
Regarding the models for ffA and ffB , the base distribution contains words related to the original event of an earthquake in Sichuan province ( China ), and the update distribution focuses more on the official ( updated ) death toll numbers .
It can be noted here that the tokenizer we used is very simple ( splitting tokens separated with white - spaces or punctuation ) so that numbers such as 7 . 9 ( the magnitude ofthe earthquake ) and 12 , 000 or 14 , 000 are divided into two tokens .
We thought this might be a for the bigram - based system to produce better results , but we ran the summarizers with a numbers - aware tokenizer and the statistical differences between versions still hold .
Table 1 : Results on the TAC - 2011 dataset .
t and * indicate that a result is significantly better than TOPicSUMg , TopicSumAuB and TopicSuma + TopicSumb , respectively ( p < 0 . 05 ).
4 . 4 Manual evaluation While the ROUGE metrics provides an arguable estimate of the informativeness of a generated summary , it does not account for other important aspects such as the readability or the overall responsiveness .
To evaluate such aspects , a manual evaluation is required .
A fairly standard approach for manual evaluation is through pairwise comparison ( Haghighi and Vanderwende , 2009 ; Ce - likyilmaz and Hakkani - Tur , 2011 ).
In this approach , raters are presented with pairs of summaries generated by two systems and they are asked to say which one is best with respect to some aspects .
We followed a similar approach to compare DualSum with Peer 43 - the best system with respect to ROUGE - 2 , on the TAC 2011 dataset .
For each collection , raters were presented with three summaries : a reference summary randomly chosen from the model summaries , and the summaries generated by Peer 43 and DualSum .
They were asked to read the summaries and say which one of the two generated summaries is best with respect to : 1 ) Overall responsiveness : which summary is best overall ( both in terms of content and fluency ), 2 ) Focus : which summary contains less irrelevant details , 3 ) Coherence : which summary is more coherent and 4 ) Non - redundancy : which summary repeats less the same information .
For each aspect , the rater could also reply that both summary were of the same quality .
For each of the 44 collections in TAC - 2011 , 3 ratings were collected from raters .
Results are reported in Table 2 .
DualSum outperforms Peer 43 in three aspects , including Overall Responsiveness , which aggregates all the other scores and can be considered the most important one .
Re - In total 132 raters participated to the task via our own crowdsourcing platform , not mentioned yet for blind review .
Table2 : Results oftheside - by - sidemanualevaluation .
garding Non - redundancy , DualSum and Peer 43 obtain similar results but the majority of raters found no difference between the two systems .
Fleiss k has been used to measure the inter - rater agreement .
For each aspect , we observe k ~ 0 . 2 which corresponds to a slight agreement ; but if we focus on tasks where the 3 ratings reflect a preference for either of the two systems , then k ~ 0 . 5 , which indicates moderate agreement .
4 . 5 Efficiency and applicability The running time for summarizing the TAC collections with DualSum , averaged over a hundred runs , is 4 . 97 minutes , using one core ( 2 . 3 GHz ).
Memory consumption was 143 MB .
It is important to note as well that , while TOP - ICSUM incorporates an additional layer to model topic distributions at the sentence level , we noted early in our experiments that this did not improve the performance ( as evaluated with ROUGE ) and consequently relaxed that assumption in Dual - Sum .
This resulted in a simplification of the model and a reduction of the sampling time .
While five minutes is fast enough to be able to experiment and tune parameters with the TAC collections , it would be quite slow for a realtime summarization system able to generate summaries on request .
As can be seen from the plate diagram in Figure 2 , all the collections are generated independently from each other .
The only exception , for which it is necessary to have all the collections available at the same time during Gibbs sampling , is the background distribution , which is estimated from all the collections simultaneously , roughly representing 27 % of the words , that should appear distributed across all documents .
The good news is that this background distribution will contain closed - class words in the language , which are domain - independent ( see supplementary material for examples ).
Therefore , we can generate this distribution from one of the TAC datasets only once , and then it can be reused .
Fixing the background distribution to a pre - computed value requires a very simple modification of the Gibbs sampling implementation , which just needs to adjust at each iteration the collection and document - specific models , and the topic assignment for the words .
Using this modified implementation , it is now possible to summarize a single collection independently .
The summarization of a single collection of the size of the TAC collections is reduced on average to only three seconds on the same hardware settings , allowing the use of this summarizer in an on - line application .
5 Conclusions The main contribution of this paper is DualSum , a new topic model that is specifically designed to identify and extract novelty from pairs of collections .
It is inspired by TopicSum ( Haghighi and Vanderwende , 2009 ), with two main changes : Firstly , while TopicSum can only learn the main topic of a collection , DualSum focuses on the differences between two collections .
Secondly , while TopicSum incorporates an additional layer to model topic distributions at the sentence level , we have found that relaxing this assumption and modeling the topic distribution at document level does not decrease the ROUGE scores and reduces the sampling time .
The generated summaries , tested on the TAC - 2011 collection , would have resulted on the second and third position in the last summarization competition according to the different ROUGE scores .
This would make DualSum statistically indistinguishable from the top system with 0 . 95 confidence .
We also propose and evaluate the applicability of an alternative implementation of Gibbs sampling to on - line settings .
By fixing the background distribution we are able to summarize a distribution in only three seconds , which seems reasonable for some on - line applications .
As future work , we plan to explore the use of DualSum to generate more general contrastive summaries , by identifying differences between collections whose differences are not of temporal nature .
Acknowledgments The research leading to these results has received funding from the European Union ' s Seventh Framework Programme ( FP7 / 2007 - 2013 ) under grant agreement number 257790 .
We would also like to thank Yasemin Altun and the anonymous reviewers for their useful comments on the draft of this paper .
