May All Your Wishes Come True : A Study of Wishes and How to Recognize Them A wish is " a desire or hope for something to happen ."
In December 2007 , people from around the world offered up their wishes to be printed on confetti and dropped from the sky during the famous New Year ' s Eve " ball drop " in New York City ' s Times Square .
We present an in - depth analysis of this collection of wishes .
We then leverage this unique resource to conduct the first study on building general " wish detectors " for natural language text .
Wish detection complements traditional sentiment analysis and is valuable for collecting business intelligence and insights into the world ' s wants and desires .
We demonstrate the wish detectors ' effectiveness on domains as diverse as consumer product reviews and online political discussions .
1 Introduction Each year , New York City rings in the New Year with the famous " ball drop " in Times Square .
In December 2007 , the Times Square Alliance , co - producer of the Times Square New Year ' s Eve Celebration , launched a Web site called the Virtual Wishing Wall that allowed people around the world to submit their New Year ' s wishes .
These wishes were then printed on confetti and dropped from the sky at midnight on December 31 , 2007 in sync with the ball drop .
We obtained access to this set of nearly 100 , 000 New Year ' s wishes , which we call the " WISH corpus ."
Table 1 shows a selected sample of the WISH corpus .
Some are far - reaching fantasies and aspirations , while others deal with everyday concerns like economic and medical distress .
We analyze this first - of - its - kind corpus in Section 2 . http :// www . timessquarenyc . org / nye / nye_interactive . html The New Oxford American Dictionary defines " wish " as " a desire or hope for something to happen ."
How wishes are expressed , and how such wishful expressions can be automatically recognized , are open questions in natural language processing .
Leveraging the WISH corpus , we conduct the first study on building general " wish detectors " for natural language text , and demonstrate their effectiveness on domains as diverse as consumer product reviews and online political discussions .
Such wish detectors have tremendous value in collecting business intelligence and public opinions .
We discuss the wish detectors in Section 3 , and experimental results in Section 4 .
1 . 1 Relation to Prior Work Studying wishes is valuable in at least two aspects : 1 .
Being a special genre of subjective expression , wishes add a novel dimension to sentiment analysis .
Sentiment analysis is often used as an automatic market research tool to collect valuable business intelligence from online text ( Pang and Lee , 2008 ; Shanahan et al ., 2005 ; Koppel and Shtrim - berg , 2004 ; Mullen and Malouf , 2008 ).
Wishes differ from the recent focus of sentiment analysis , namely opinion mining , by revealing what people explicitly want to happen , not just what they like or dislike ( Ding et al ., 2008 ; Hu and Liu , 2004 ).
For example , wishes in product reviews could contain new feature requests .
Consider the following ( real ) product review excerpt : " Great camera .
Indoor shots with a flash are not quite as good as 35mm .
I wish the camera had a higher optical zoom so that I could take even better wildlife photos ."
The first sentence contains positive opinion , the second negative opinion .
However , wishful statements like the third sentence are often annotated as non - opinion - bearing in sentiment analysis corpora ( Hu and Liu , 2004 ; Ding et al ., 2008 ), even though they clearly contain important information .
An automatic " wish detector " text - processing tool can be useful for product manufacturers , advertisers , politicians , and others looking to discover what people want .
Wishes can tell us a lot about people : their innermost feelings , perceptions of what they ' re lacking , and what they desire ( Speer , 1939 ).
Many psychology researchers have attempted to quantify the contents of wishes and how they vary with factors such as location , gender , age , and personality type ( Speer , 1939 ; Milgram and Riedel , 1969 ; Ehrlichman and Eichenstein , 1992 ; King and Broyles , 1997 ).
These studies have been small scale with only dozens or hundreds of participants .
The WISH corpus provides the first large - scale collection of wishes as a window into the world ' s desires .
Beyond sentiment analysis , classifying sentences as wishes is an instance of non - topical classification .
Tasks under this heading include computational humor ( Mihalcea and Strapparava , 2005 ), genre classification ( Boese and Howe , 2005 ), authorship attribution ( Argamon and Shimoni , 2003 ), and metaphor detection ( Krishnakumaran and Zhu , 2007 ), among others ( Mishne et al ., 2007 ; Mihal - cea and Liu , 2006 ).
We share the common goal of classifying text into a unique set oftarget categories ( in our case , wishful and non - wishful ), but use different techniques catered to our specific task .
Our feature - generation technique for wish detection resembles template - based methods for information extraction ( Brin , 1999 ; Agichtein and Gravano , 2000 ).
2 Analyzing the WISH Corpus We analyze the WISH corpus with a variety of statistical methods .
Our analyses not only reveal what people wished for on New Year ' s Eve , but also provide insight for the development of wish detectors in Section 3 .
The complete WISH corpus contains nearly 100 , 000 wishes collected over a period of 10 days in December 2007 , most written in English , with the remainder in Portuguese , Spanish , Chinese , French , and other languages .
For this paper , we consider only the 89 , 574 English wishes .
Most of these English wishes contain optional geographic meta data provided by the wisher , indicating a variety of countries ( not limited to English - speaking ) around the world .
We perform minimal preprocessing , including TreeBank - style tokenization , downcasing , and punctuation removal .
Each wish is treated as a single entity , regardless of whether it contains multiple sentences .
After preprocessing , the average length of a wish is 8 tokens .
2 . 1 The Topic and Scope of Wishes As a first step in understanding the content of the wishes , we asked five annotators to manually annotate a random subsample of 5 , 000 wishes .
Sections 2 . 1 and 2 . 2 report results on this subsample .
The wishes were annotated in terms of two at ( a ) Topic of Wishes ( b ) Scope of Wishes Table 1 : Example wishes and their frequencies in the WISH corpus .
Figure 1 : Topic and scope distributions based on manual annotations of a random sample of 5 , 000 wishes in the WISH corpus .
tributes : topic and scope .
We used 11 pre - defined topic categories , and their distribution in this sub - sample of the WISH corpus is shown in Figure 1 ( a ).
The most frequent topic is love , while health , happiness , and peace are also common themes .
Many wishes also fell into an other category , including specific individual requests (" i wish for a new puppy "), solicitations or advertisements (" call me 555 - 1234 ", " visit website . com "), or sinister thoughts (" to take over the world ").
The 5 , 000 wishes were also manually assigned a scope .
The scope of a wish refers to the range of people that are targeted by the wish .
We used 6 pre - defined scope categories : self (" I want to be happy "), family (" For a cure for my husband "), specific person by name (" Prayers for name "), country (" Bring our troops home !
"), world (" Peace to everyone in the world "), and other .
In cases where multiple scope labels applied , the broadest scope was selected .
Figure 1 ( b ) shows the scope distribution .
It is bimodal : over one third of the wishes are narrowly directed at one ' s self , while broad wishes at the world level are also frequent .
The in - between scopes are less frequent .
2 . 2 Wishes Differ by Geographic Location As mentioned earlier , wishers had the option to enter a city / country when submitting wishes .
Of the manually annotated wishes , about 4 , 000 included valid location information , covering all 50 states in the U . S ., and all continents except Antarctica .
We noticed a statistically significant difference between wishes submitted from the United States ( about 3600 ) versus non - U . S . ( about 400 ), both in terms of their topic and scope distributions .
For each comparison , we performed a Pearson %- test using location as the explanatory variable and either topic or scope as the response variable .
The null hypothesis is that the variables are independent .
For both tests we reject the null hypothesis , with p < 0 . 001 for topic , and p = 0 . 006 for scope .
This indicates a dependence between location and topic / scope .
Asterisks in Figure 2 denote the labels that differ significantly between U . S . and non - U . S . wishes .
In particular , we observed that there are significantly more wishes about love , peace , and travel from non - U . S . locales , and more about religion from the U . S .
There are significantly more world - scoped wishes from non - U . S . locales , and more country - and family - scoped wishes from the U . S . We also compared wishes from " red states " versus " blue states " ( U . S . states that voted a majority for the Republican and Democratic presidential candidates in 2008 , respectively ), but found no significant differences .
The topic test examined a 2 x 11 contingency table , while the scope test used a 2 x 6 contingency table .
In both tests , all of the cells in the tables had an expected frequency of at least 5 , so the x 2 approximation is valid .
To identify the labels that differ significantly by location , we computed the standardized residuals for the cells in the two contingency tables .
Standardized residuals are approximately N ( 0 , 1 )- distributed and can be used to locate the major contributors to a significant x 2 - test statistic ( Agresti , 2002 ).
The asterisks in Figure 2 indicate the surprisingly large residuals , i . e ., the difference between observed and expected frequencies is outside a 95 % confidence interval .
( a ) Wish topics differ by Location ( b ) Wish scopes differ by Location Figure 2 : Geographical breakdown of topic and scope distributions based on approximately 4 , 000 location - tagged wishes .
Asterisks indicate statistically significant differences .
2 . 3 Wishes Follow Zipf ' s Law We now move beyond the annotated subsample and examine the full set of 89 , 574 English wishes .
We noticed that a small fraction ( 4 %) of unique wishes account for a relatively large portion ( 16 %) of wish occurrences , while there are also many wishes that only occur once .
The question naturally arises : do wishes obey Zipf ' s Law ( Zipf , 1932 ; Manning and Schutze , 1999 )?
If so , we should expect the frequency of a unique wish to be inversely proportional to its rank , when sorted by frequency .
Figure 3 plots rank versus frequency on a log - log scale and reveals an approximately linear negative slope , thus suggesting that wishes do follow Zipf ' s law .
It also shows that low - occurrence wishes dominate , hence learning might be hindered by data sparseness .
2 . 4 Latent Topic Modeling for Wishes The 11 topics in Section 2 . 1 were manually predefined based on domain knowledge .
In contrast , in this section we applied Latent Dirichlet Allocation ( LDA ) ( Blei et al ., 2003 ) to identify the latent topics in the full set of 89 , 574 English wishes in an log ( rank ) Figure 3 : The rank vs . frequency plot ofwishes , approximately obeying Zipf ' s law .
Note the log - log scale .
unsupervised fashion .
The goal is to validate and complement the study in Section 2 . 1 .
To apply LDA to the wishes , we treated each individual wish as a short document .
We used 12 topics , Collapsed Gibbs Sampling ( Griffiths and Steyvers , 2004 ) for inference , hyperparameters a = 0 . 5 and f3 = 0 . 1 , and ran Markov Chain Monte Carlo for 2000 iterations .
The resulting 12 LDA topics are shown in Table 2 , in the form of the highest probability words p ( word \! topic ) in each topic .
We manually added summary descriptors for readability .
With LDA , it is also possible to observe which words were assigned to which topics in each wish .
For example , LDA assigned most words in the wish " world ( 8 ) peace ( 8 ) and my friends ( 4 ) in iraq ( 1 ) to come ( 1 ) home ( 1 )" to two topics : peace and troops ( topic numbers in parentheses ).
Interestingly , these LDA topics largely agree with the pre - defined topics in Section 2 . 1 .
3 Building Wish Detectors We now study the novel NLP task of wish detection , i . e ., classifying individual sentences as being wishes or not .
Importantly , we want our approach to transfer to domains other than New Year ' s wishes , including consumer product reviews and online political discussions .
It should be pointed out that wishes are highly domain dependent .
For example , " I wish for world peace " is a common wish on New Year ' s Eve , but is exceedingly rare in product reviews ; and vice versa : " I want to have instant access to the volume " may occur in product reviews , but is an unlikely New Year ' s wish .
For this initial study , we do assume that there are some labeled training data in the target domains of interest .
To transfer the knowledge learned from the out - of - domain WISH corpus to other domains , our key insight is the following : while the content of wishes ( e . g ., " world peace ") may not transfer across domains , the ways wishes are expressed ( e . g ., " I wish for___ ") may .
We call these expressions wish templates .
Our novel contribution is an unsupervised method for discovering candidate templates from the WISH corpus which , when applied to other target domains , improve wish detection in those domains .
3 . 1 Two Simple Wish Detectors Before describing our template discovery method , we first describe two simple wish detectors , which serve as baselines .
[ Manual ]: It may seem easy to locate wishes .
Perhaps looking for sentences containing the phrases " i wish ," " i hope ," or some other simple patterns is sufficient for identifying the vast majority of wishes in a domain .
To test this hypothesis , we asked two native English speakers ( not the annotators , nor affiliated with the project ; no exposure to any of the wish datasets ) to come up with text patterns that might be used to express wishes .
They were shown three dictionary definitions of " to wish ( v )" and " wish ( n )".
They produced a ranked list of 13 templates ; see Table 3 .
The underscore matches any string .
These templates can be turned into a simple rule - based classifier : If part of a sentence matches one of the templates , the sentence is hopefully___ would be better if___ would that___ classified as a wish .
By varying the depth of the list , one can produce different precision / recall behaviors .
Overall , we expect [ Manual ] to have relatively high precision but low recall .
Table 3 : Manual templates for identifying wishes .
[ Words ]: Another simple method for detecting wishes is to train a standard word - based text classifier using the labeled training set in the target domain .
Specifically , we represent each sentence as a binary word - indicator vector , normalized to sum to 1 .
We then train a linear Support Vector Machine ( SVM ).
This method may have higher recall , but precision may suffer .
For instance , the sentence " Her wish was carried out by her husband " is not a wish , but could be misclassified as one because of the word " wish ."
Note that neither ofthe two baseline methods uses the WISH corpus .
Table 2 : Wish topics learned from Latent Dirichlet Allocation .
Words are sorted byp ( word \! topic ).
3 . 2 Automatically Discovering Wish Templates We now present our method to automatically discover high quality wish templates using the WISH corpus .
The key idea is to exploit redundancy in how the same wish content is expressed .
For example , as we see in Table 1 , both " world peace " and " i wish for world peace " are common wishes .
Similarly , both " health and happiness " and " i wish for health and happiness " appear in the WISH corpus .
It is thus reasonable to speculate that " i wish for___ " is a good wish template .
Less obvious templates can be discovered in this way , too , such as " let there be ___ " from " peace on earth " and " let there be peace on earth ."
We formalize this intuition as a bipartite graph , illustrated in Figure 4 .
Let W = { w1 ,... , wn } be the set of unique wishes in the WISH corpus .
The bipartite graph has two types of nodes : content nodes C and template nodes T , and they are generated as follows .
If a wish Wj ( e . g ., " i wish for world peace ") contains another wish w .
( e . g ., " world peace "), we create a content node c1 = w , and a template node t1 =" i wish for___ ".
We denote this relationship by wj = c1 + t1 .
Note the order of c1 and t1 is insignificant , as how the two combine is determined by the underscore in t1 , and wj = t1 + c1 is just fine .
In addition , we place a directed edge from c1 to t1 with edge weight count ( wj ), the frequency of wish wj in the WISH corpus .
Then , a template node appears to be a good one if many heavy edges point to it .
On the other hand , a template is less desirable if it is part of a content node .
For example , when wj =" health and happiness " and w . =" health ", we create the template t2 =" ___and happiness " and the content node c3 = wj .
If there is another wish wk =" i wish for health and happiness ", then there will be a content node c2 = wj .
The template t2thus contains some content words ( since it matches c2 ), and may not generalize well in a new domain .
We capture this by backward edges : if 3c ' e C , and 3 string s ( s not necessarily in C or W ) such that c ' = s + t , we add a backward edge from t to c ' with edge weight count ( c ').
Based on such considerations , we devised the following scheme for scoring templates : world peace cl • ~£ ount ( cl + tl ) O tl i wish for and happiness Figure 4 : The bipartite graph to create templates .
where in ( t ) is the in - degree of node t , defined as the sum of edge weights coming into t ; out ( t ) is the out - degree of node t , defined similarly .
In other words , a template receives a high score if it is " used " by many frequent wishes but does not match many frequent content - only wishes .
To create the final set of template features , we apply the threshold score ( t ) > 5 .
This produces a final list of 811 templates .
Table 4 lists some of the top templates ranked by score ( t ).
While some of these templates still contain time - or scope - related words (" for my family "), they are devoid of specific topical content .
Notice that we have automatically identified several of the manually derived templates in Table 3 , and introduce many new variations that a learning algorithm can leverage .
Table 4 : Top templates according to Equation 1 .
3 . 3 Learning with Wish Template Features After discovering wish templates as described above , we use them as features for learning in a new domain ( e . g ., product reviews ).
For each sentence in the new domain , we assign binary features indicating which templates match the sentence .
Two types of matching are possible .
Strict matching requires that the template must match an entire sentence from beginning to end , with at least one word filling in for the underscore .
( All matching during the template generation process was strict .)
Non - strict matching health and happiness c2 * health c3 Templates Words + Templates Figure 5 : Politics domain precision - recall curves .
Figure 6 : Products domain precision - recall curves .
requires only that template match somewhere within a sentence .
Rather than choose one type of matching , we create both strict and non - strict template features ( 1622 binary features total ) and let the machine learning algorithm decide what is most useful .
Our third wish detector , [ Templates ], is a linear SVM with the 1622 binary wish template features .
Our fourth wish detector , [ Words + Templates ], is a linear SVM with both template and word features .
4 Experimental Results 4 . 1 Target Domains and Experimental Setup We experimented with two domains , manually labeled at the sentence - level as wishes or non - wishes . Example wishes are listed in Table 6 .
Products .
Consumer product reviews : 1 , 235 sentences selected froma collectionofamazon . comand cnet . com reviews ( Hu and Liu , 2004 ; Ding et al ., 2008 ).
12 % of the sentences are labeled as wishes .
Politics .
Political discussion board postings : 6 , 379 sentences selected from politics . com ( Mullen and Malouf , 2008 ).
34 % are labeled as wishes .
We automatically split the corpora into sentences using MxTerminator ( Reynar and Ratna - parkhi , 1997 ).
As preprocessing before learning , we tokenized the text in the Penn TreeBank style , downcased , and removed all punctuation .
These wish - annotated corpora are available for download at http :// pages . cs . wisc . edu /~ goldberg / wish_data .
For all four wish detectors , we performed 10 - fold cross validation .
We used the default parameter in SVM % h * for all trials ( Joachims , 1999 ).
As the data sets are skewed , we compare the detectors using precision - recall curves and the area under the curve ( AUC ).
For the manual baseline , we produce the curve by varying the number of templates applied ( in rank order ), which gradually predicts more sentences as wishes ( increasing recall at the expense of precision ).
A final point is added at recall 1 . 0 , corresponding to applying an empty template that matches all sentences .
For the SVM - based methods , we vary the threshold applied to the real - valued margin prediction to produce the curves .
All curves are interpolated , and AUC measures are computed , using the techniques of ( Davis and Goadrich , 2006 ).
4 . 2 Results Figure 5 shows the precision - recall curves for the Politics corpus .
All curves are averages over 10 folds ( i . e ., for each of 100 evenly spaced , interpolated recall points , the 10 precision values are averaged ).
As expected , [ Manual ] can be very precise with low recall — only the very top few templates achieve high precision and pick out a small number of wishes with " i wish " and " i hope ."
As we introduce more templates to cover more true wishes , precision drops off quickly .
[ Templates ] is similar , Products : the only area i wish apple had improved upon would be the screen i just want music to eminate from it when i want how i want the dial on the original zen was perfect and i wish it was on this model i would like album order for my live albums and was just wondering Politics : all children should be allowed healthcare please call on your representatives in dc and ask them to please stop the waste in iraq i hope that this is a new beginning for the middle east may god bless and protect the brave men and that we will face these dangers in the future with slightly better precision in low recall regions .
[ Words ] is the opposite : bad in high recall but good in low recall regions .
[ Words + Templates ] is the best , taking the best from both kinds of features to dominate other curves .
Table 5 shows the average AUC across 10 folds .
[ Words + Templates ] is significantly better than all other detectors under paired t - tests ( p = 1 x 10 - 7 vs . [ Manual ], p = 0 . 01 vs . [ Words ], and p = 4 x 10 - 7 vs . [ Templates ]).
All other differences are statistically significant , too .
Table 6 : Example target - domain wishes correctly identified by [ Words + Templates ].
Figure 6 shows the precision - recall curves for the Products corpus .
Again , [ Words + Templates ] mostly dominates other detectors .
In terms of average AUC across folds ( Table 5 ), [ Words + Templates ] is also the best .
However , due to the small size of this corpus , the AUC values have high variance , and the difference between [ Words + Templates ] and [ Words ] is not statistically significant under a paired t - test ( p = 0 . 16 ).
Finally , to understand what is being learned in more detail , we take a closer look at the SVM models ' weights for one fold of the Products corpus ( Table 7 ).
The most positive and negative features make intuitive sense .
Note that [ Words + Templates ] seems to rely on templates for selecting wishes and words for excluding non - wishes .
This partially explains the synergy of combining the feature types .
Table 7 : Features with the largest magnitude weights in the SVM models for one fold ofthe Products corpus .
5 Conclusions and Future Work We have presented a novel study of wishes from an NLP perspective .
Using the first - of - its - kind WISH corpus , we generated domain - independent wish templates that improve wish detection performance across product reviews and political discussion posts .
Much work remains in this new research area , including the creation of more types of features .
Also , due to the difficulty in obtaining wish - annotated training data , we plan to explore semi - supervised learning for wish detection .
Acknowledgements We thank the Times Square Alliance for providing the WISH corpus , and the Wisconsin Alumni Research Foundation .
AG is supported in part by a Yahoo !
Key Technical Challenges Grant .
Table 5 : AUC results ( 10 - fold averages ± one standard deviation ).
